name: CI & (optional) CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/backend/package-lock.json
      - run: npm ci
      - run: npm run lint
      - run: npm test

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/frontend/package-lock.json
      - run: npm ci
      - run: npm run lint
      - run: npm run build
      - run: npm test

  # === 可选：前端部署到 GitHub Pages（仅 main 分支 push 触发） ===
  deploy-frontend:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [backend, frontend]
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Build frontend
        working-directory: apps/frontend
        run: |
          npm ci
          npm run build
      - uses: actions/upload-pages-artifact@v3
        with:
          path: apps/frontend/dist
      - uses: actions/deploy-pages@v4

  # === 可选：后端部署到 Aliyun ECS ===
  deploy-backend:
    runs-on: ubuntu-latest
    needs: [backend, frontend] # 确保测试通过后才部署，应依赖于 backend 和 frontend 作业
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci --production
        working-directory: apps/backend

      - name: Deploy to Aliyun ECS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ALIYUN_HOST }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          key: ${{ secrets.ALIYUN_SSH_PRIVATE_KEY }}
          port: ${{ secrets.ALIYUN_PORT || 22 }}
          script: |
            # 进入项目目录，如果没有则创建
            cd ${{ secrets.ALIYUN_DEPLOY_DIR || '/usr/local/cicd/' }}
          # 拉取最新代码
          git fetch --all
          git reset --hard origin/main
          # 安装依赖
          npm ci --production
          # 使用PM2重启应用（PM2如果未启动则会自动启动）
          pm2 restart cicd-demo || pm2 start apps/backend/server.js --name "cicd-demo"
          # 保存PM2配置以便下次开机自启
          pm2 save
          # 输出部署成功信息
          echo "Deployment successful!"